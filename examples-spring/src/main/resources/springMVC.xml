<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">

	<context:component-scan
		base-package="org.examples.spring.dao,org.examples.spring.manager,org.examples.spring.web" />
	<mvc:annotation-driven />
	<context:annotation-config />

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" />

	<!-- 设置freeMarker的配置文件路径 -->
	<bean id="freemarkerConfiguration"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean" />

	<!-- 
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="viewClass">
			<value>org.springframework.web.servlet.view.freemarker.FreeMarkerView
			</value>
		</property>
		<property name="cache">
			<value>true</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
	 -->
	
	<!-- 视图处理器 -->  
    <bean id="viewResolver"  
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="prefix" value="/WEB-INF/views" />  
        <property name="suffix" value=".jsp" />  
    </bean>  

	<!-- JDBC模板 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="baseDao" class="org.examples.spring.dao.BaseDao">
          <property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>

	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 用注解来实现事务管理 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!--利用了拦截器的原理。 -->
	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<!-- 配置事务属性 -->
		<property name="transactionAttributes">
			<props>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="operate*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="insert*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>

	<!-- 日志拦截器 -->
	<bean id="logNDCInteceptor" class="org.examples.spring.inteceptor.LogNDCInteceptor" />
	<!-- 权限拦截器 -->
	<bean id="myPermissionsInteceptor" class="org.examples.spring.inteceptor.MyPermissionsInteceptor"></bean>
	<!-- RequestHelper拦截器 -->
	<bean id="myRequestHelperInteceptor" class="org.examples.spring.inteceptor.MyRequestHelperInteceptor"></bean>
	<!-- 用户信息拦截器 -->
	<bean id="myUserInfoInteceptor" class="org.examples.spring.inteceptor.MyUserInfoInteceptor"></bean>
	<!-- 注解请求映射
	<bean class="org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter">
		<property name="interceptors">
			<list>
				<ref bean="logNDCInteceptor" />
				<ref bean="myRequestHelperInteceptor" />
				<ref bean="myPermissionsInteceptor" />
				<ref bean="myUserInfoInteceptor" />
			</list>
		</property>
	</bean>
	 -->

	<!-- 处理.. -->
	<bean id="byteArray_hmc"
		class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
	<!-- 处理.. -->
	<bean id="string_hmc"
		class="org.springframework.http.converter.StringHttpMessageConverter" />
	<!-- 处理.. -->
	<bean id="resource_hmc"
		class="org.springframework.http.converter.ResourceHttpMessageConverter" />
	<!-- 处理.. -->
	<bean id="source_hmc"
		class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
	<!-- 处理.. -->
	<bean id="xmlAwareForm_hmc"
		class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" />
	<!-- 处理.. -->
	<bean id="jaxb2RootElement_hmc"
		class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />
	<!-- 处理json -->
	<bean id="jackson_hmc"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="byteArray_hmc" />
				<ref bean="string_hmc" />
				<ref bean="resource_hmc" />
				<ref bean="source_hmc" />
				<ref bean="xmlAwareForm_hmc" />
				<ref bean="jaxb2RootElement_hmc" />
				<ref bean="jackson_hmc" />
			</list>
		</property>
	</bean>

	<!-- 总错误处理 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 上传文件大于最大尺寸后转向出错页面 -->
				<prop
					key="org.springframework.web.multipart.MaxUploadSizeExceededException">
					redirect:/uploadError.jsp
				</prop>
			</props>
		</property>
		<property name="defaultErrorView">
			<value>forward:/error.jsp</value>
		</property>
		<property name="defaultStatusCode">
			<value>200</value>
		</property>
		<property name="warnLogCategory">
			<value>org.springframework.web.servlet.handler.SimpleMappingExceptionResolver
			</value>
		</property>
	</bean>

	<!-- 允许对静态资源文件的访问 -->
	<mvc:default-servlet-handler />


</beans>